DROP SEQUENCE SEQ_RESTAURANTS;
DROP SEQUENCE SEQ_TYPES_GASTRONOMIQUES;
DROP SEQUENCE seq_VILLES;
DROP SEQUENCE SEQ_EVAL;
DROP SEQUENCE SEQ_NOTES;
DROP SEQUENCE SEQ_CRITERES_EVALUATION;


DROP TABLE RESTAURANTS CASCADE CONSTRAINTS;
DROP TABLE TYPES_GASTRONOMIQUES CASCADE CONSTRAINTS;
DROP TABLE VILLES CASCADE CONSTRAINTS;
DROP TABLE NOTES CASCADE CONSTRAINTS;
DROP TABLE CRITERES_EVALUATION CASCADE CONSTRAINTS;
DROP TABLE EVALUATIONS CASCADE CONSTRAINTS;
DROP TABLE BASICEVAL CASCADE CONSTRAINTS;
DROP TABLE COMPLETE_EVAL CASCADE CONSTRAINTS;


CREATE TABLE RESTAURANTS (numero number(10) NOT NULL, nom varchar2(100) NOT NULL, adresse varchar2(100) NOT NULL, description clob, site_web varchar2(100), fk_type number(10) NOT NULL, fk_vill number(10) NOT NULL, PRIMARY KEY (numero));
CREATE TABLE TYPES_GASTRONOMIQUES (numero number(10) NOT NULL, libelle varchar2(100) NOT NULL UNIQUE, description clob NOT NULL, PRIMARY KEY (numero));
CREATE TABLE VILLES (numero number(10) NOT NULL, code_postal varchar2(100) NOT NULL, nom_ville varchar2(100) NOT NULL, PRIMARY KEY (numero));
CREATE TABLE NOTES (numero number(10) NOT NULL, note number(3) NOT NULL, fk_eval number(10) NOT NULL, fk_crit number(10) NOT NULL, PRIMARY KEY (numero));
CREATE TABLE CRITERES_EVALUATION (numero number(10) NOT NULL, nom varchar2(100) NOT NULL UNIQUE, description varchar2(512), PRIMARY KEY (numero));

---------------------NEW STUFF--------------------------
CREATE TABLE EVALUATIONS (numero number(10) not null, fk_rest number(10) not null, date_eval DATE, primary key(numero));
CREATE TABLE BASICEVAL (numero number(10) not null, fk_eval number(10) not null, isLiked CHAR(1) not null, address_ip varchar2(100) not null, primary key (numero));
CREATE TABLE COMPLETE_EVAL (fk_eval number(10) not null, commentaire clob not null, username varchar2(100) not null, primary key (fk_eval));
-----------------------------------------------


ALTER TABLE RESTAURANTS ADD CONSTRAINT FK_REST_TYPE FOREIGN KEY (fk_type) REFERENCES TYPES_GASTRONOMIQUES (numero);
ALTER TABLE RESTAURANTS ADD CONSTRAINT FK_REST_VILL FOREIGN KEY (fk_vill) REFERENCES VILLES (numero);
ALTER TABLE NOTES ADD CONSTRAINT FK_NOTE_CRIT FOREIGN KEY (fk_crit) REFERENCES CRITERES_EVALUATION (numero);
---------------------NEW STUFF--------------------------
ALTER TABLE EVALUATIONS ADD CONSTRAINT  FK_EVAL_REST foreign key (fk_rest) REFERENCES RESTAURANTS (numero);
ALTER TABLE BASICEVAL ADD CONSTRAINT FK_BASE_EVAL_EVAL foreign key (fk_eval) references EVALUATIONS (numero);
ALTER TABLE COMPLETE_EVAL ADD CONSTRAINT FK_COMP_EVAL_EVAL foreign key (fk_eval) references EVALUATIONS (numero);
--
ALTER TABLE NOTES ADD CONSTRAINT FK_NOTE_COM_EVAL FOREIGN KEY (fk_eval) REFERENCES COMPLETE_EVAL (fk_eval);
-----------------------------------------------

CREATE SEQUENCE SEQ_RESTAURANTS;
CREATE SEQUENCE SEQ_TYPES_GASTRONOMIQUES;
CREATE SEQUENCE SEQ_VILLES;
CREATE SEQUENCE SEQ_EVAL;
CREATE SEQUENCE SEQ_NOTES;
CREATE SEQUENCE SEQ_CRITERES_EVALUATION;


CREATE OR REPLACE TRIGGER TR_BIF_RESTAURANTS
BEFORE INSERT ON RESTAURANTS
FOR EACH ROW
BEGIN
	IF :NEW.NUMERO IS NULL THEN
		:NEW.NUMERO := SEQ_RESTAURANTS.NEXTVAL;
	END IF;
END;
/

CREATE OR REPLACE TRIGGER TR_BIF_TYPES_GASTRONOMIQUES
BEFORE INSERT ON TYPES_GASTRONOMIQUES
FOR EACH ROW
BEGIN
	IF :NEW.NUMERO IS NULL THEN
		:NEW.NUMERO := SEQ_TYPES_GASTRONOMIQUES.NEXTVAL;
	END IF;
END;
/

CREATE OR REPLACE TRIGGER TR_BIF_VILLES
BEFORE INSERT ON VILLES
FOR EACH ROW
BEGIN
	IF :NEW.NUMERO IS NULL THEN
		:NEW.NUMERO := SEQ_VILLES.NEXTVAL;
	END IF;
END;
/


-------------NEW STUFF---------------------
CREATE OR REPLACE  TRIGGER TR_BIF_EVAL
    BEFORE INSERT on EVALUATIONS
    FOR EACH ROW
BEGIN
    if :NEW.NUMERO is null THEN
        :NEW.NUMERO := SEQ_EVAL.nextval;
    end if;
end;
/
CREATE OR REPLACE TRIGGER TR_BIF_BASE_EVAL
    BEFORE INSERT ON BASICEVAL
    FOR EACH ROW
BEGIN
    IF :NEW.NUMERO IS NULL THEN
        :NEW.NUMERO := SEQ_EVAL.NEXTVAL;
    END IF;
END;
/
-- CREATE OR REPLACE TRIGGER TR_BIF_COMP_EVAL
--     BEFORE INSERT ON COMPLETE_EVAL
--     FOR EACH ROW
-- BEGIN
--     IF :NEW.NUMERO IS NULL THEN
--         :NEW.numero := SEQ_EVAL.NEXTVAL;
--     END IF;
-- END;
-- /
-------------------------------------------

CREATE OR REPLACE TRIGGER TR_BIF_CRITERES_EVALUATION
BEFORE INSERT ON CRITERES_EVALUATION
FOR EACH ROW
BEGIN
	IF :NEW.NUMERO IS NULL THEN
		:NEW.NUMERO := SEQ_CRITERES_EVALUATION.NEXTVAL;
	END IF;
END;
/

CREATE OR REPLACE TRIGGER TR_BIF_NOTES
    BEFORE INSERT ON NOTES
    FOR EACH ROW
BEGIN
    IF :NEW.NUMERO IS NULL THEN
        :NEW.NUMERO := SEQ_NOTES.NEXTVAL;
    END IF;
END;
/